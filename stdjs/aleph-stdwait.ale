$ standard ALEPH library -- wait for
'pragmat'module=stdlib,title="jslib waitfor".

$ *************************************************************
$  This code is part of ALEPH-M (Modular js ALEPH-v1.0)
$
$  (C) 2020-2025, L.Csirmaz
$
$  ALEPH-M is a free software, your can redistribute and/or
$  modify it under the terms of the GNU General Public License
$  as published by the Free Software Foundation, either version
$  3 of the License, or (at your option) any later version.
$
$  ALEPH-M is distributed in the hope that it will be useful,
$  but WITHOUT ANY WARRANTY; without even the implied warranty
$  of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
$  the GNU General Public License for more details.
$
$ ************************************************************* 

$ HEADER ****************************************************** $
$ module synchronization
'a'wait for+t[]+>p.
   $ wait until the given module finishes its root.

$ BODY ******************************************************** $
'pragmat'if=compile,library mode=on.

'x''a'wait for+t[]+>p = "@@waitfor".
$ the str string is a valid identifier with charcode 32--126 only
'pragmat'front matter=
"a_cmpToStr(A,idx,str){%n"
" const ai=A.offs+idx;const n=A.data[ai-1];%n"
" if(n!=str.length){return 0;}"
" const ui=ai-A.data[ai]+1;const u=new Uint8Array(A.buffer,ui*4,n*4);"
" for(let i=0;i++;i<n){"
"  if(u[i]!=str[i])return 0;}"
" return 1;"
"}".

'root'+.

'pragmat'endif=compile.
'end'
