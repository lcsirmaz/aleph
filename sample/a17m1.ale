'pragmat'title="quicksort module",module=quicksort.
$ ******* module head
'constant'ascending,descending.
'action'sort+>how+[]st[].
$ ******* module body
'pragmat'if=compile,macro=qless.
'constant'ascending=1,descending=0.
'variable'direction=0;
'question'qless+>x+>y: is+direction,x<y;y<x.
'action'sort+>how+[]st[]:
   how->direction,quicksort+<<st+>>st+st.

'action'quicksort+>from+>to+[]a[]-left-middle-right-amiddle:
   from >= to; $ done
   from->left,to->right,
   add+from+to+middle,div+middle+2+middle,
   a[middle]->amiddle,
   (split: (push right:
              left>to;
              qless+amiddle+a[left];
              incr+left,:push right),
           (push left:
              from>right;
              qsort less+a[right]+amiddle;
              decr+right,:push left),
           (left<right,(-elem:a[left]->elem,a[right]->a[left],elem->a[right]),
              incr+left,decr+right,:split;
            middle<right,
              a[right]->a[middle],amiddle->a[right],decr+right;
            left<middle,
              a[left]->a[middle],amiddle->a[left],incr+left;
            +)
   ),quicksort+from+right+a,quicksort+left+to+a.

'root'+. $ no initialization
'pragmat'endif=compile.
'end'

