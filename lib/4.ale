$ Towers of Hanoi
'pragmat'title="Towers of Hanoi".
$ read the number of discs; between 1 and 6
$ move the discs from tower A to tower C
$ Make profiling: count the number of calls for some rules
$ use macros
'stack'[1]A[],[1]B[],[1]C[].
'var'total=4. $ number of discs
'pragmat'macro=(print disc,full disc).
'pragmat'count=on.

'action'tower+>size+[]from[]+[]via[]+[]to[]:
   size=0,backtrack; $ show call stack when compiled with -g
   decr+size,tower+size+from+to+via,
     disc+from+to,print towers,
     tower+size+via+from+to.
'action'disc+[]from[]+[]to[]:
   (*from->to*)to,unstack+from.
'action'print towers-row:
   total->row,putc+newline,
   (nxt:row=0;
        decr+row,print disc+A+row,
                 print disc+B+row,
                 print disc+C+row,putc+newline,:nxt).
'action'print disc+st[]+>row-idx:
   add+row+<<st+idx,(was+st+idx,full disc+st[idx];empty disc).
'action'full disc+>n-spaces:
   subtr+total+n+spaces,
   print chars+spaces+/ /,print chars+n+/*/,print chars+1+/*/,
   print chars+n+/*/,print chars+spaces+/ /.
'action'empty disc:
   print chars+total+/ /,print chars+1+/*/,print chars+total+/ /.
'action'print chars+>n+>chr:
   n=0;putc+chr,decr+n,:print chars.
'action'play game-n:
   total->n,(fill:n=0;(*n->A*)A,decr+n,:fill),
   print towers,tower+total+A+B+C.

'root'
  printf+"Towers of Hanoi%n"
         "How many towers? Enter a number between 1 and 7:",
  get int+STDIN+total,total>=1,total<=7,play game.

'end'
