# JOE syntax highlighting file for ALEPH, extension .ale

=Idle
=Comment
=Constant
=Keyword
=Bad
#=Comment green
#=Constant cyan
#=Keyword blue bold
#=Bad bold red

:idle Idle
	*		idle
	"a-zA-Z%@"	ident
	")]"		optor
	"/"		char_denot	recolor=-1
	"#"		short_comment1	recolor=-1 mark
	"'"		keyword		buffer recolor=-1
	"\""		string		recolor=-1
	"$"		comment		recolor=-1
	"0"		maybe_hex	recolor=-1
	"1-9"		number		recolor=-1 

:optor Idle
	*		idle
	")]"		optor
	"a-zA-Z%@"	ident
	"#"		short_comment1	recolor=-1  mark
	"$"		comment_optor	recolor=-1
	"0"		maybe_hex	recolor=-1
	"1-9"		number		recolor=-1
	"\""		string		recolor=-1
	"'"		keyword		buffer recolor=-1

# read tag, const, ) optor

# char denotation
:char_denot Idle
	*		char_denot2	recolor=-2
	"\n"		idle

:char_denot2 Constant	string
	*		reset		recolor=-3
	"/"		optor

# Comments
:short_comment1 Idle
	*		idle		noeat markend recolormark
	" "		short_comment1
	"a-zA-Z0-9"	short_comment   noeat markend recolormark

:short_comment Comment
	*		idle		noeat
	"a-zA-Z0-9 "	short_comment	

:comment Comment	comment
	*		comment
	"$"		idle
	"\n"		idle

:comment_optor Comment	comment
	*		comment
	"$"		optor
	"\n"		idle
# Keywords
:keyword Bad
	*		idle		noeat
	"a-z"		keyword
	"'"		chkkeyword
:chkkeyword Bad
	*		idle	noeat strings
	"'a'"		kw
	"'act'"		kw
	"'action'"	kw
	"'charfile'"	kw
	"'cons'"	kw
	"'const'"	kw
	"'constant'"	kw
	"'cst'"		kw
	"'datafile'"	kw
	"'e'"		kw
	"'end'"		kw
	"'exit'"	kw
	"'external'"	kw
	"'f'"		kw
	"'fct'"		kw
	"'func'"	kw
	"'function'"	kw
	"'p'"		kw
	"'pragmat'"	kw
	"'pred'"	kw
	"'predicate'"	kw
	"'q'"		kw
	"'qu'"		kw
	"'que'"		kw
	"'question'"	kw
	"'root'"	kw
	"'stack'"	kw
        "'static'"	kw
	"'table'"	kw
	"'var'"		kw
	"'variable'"	kw
	"'x'"		kw
done

:kw Keyword
	*		idle	noeat

# String constant
:string Constant	string
	*		string
	"\n"		idle
	"\""		idle

# Numeric constant

:maybe_hex Constant
	*		optor		noeat
	"xX"		hex_number
	"0-9"		number

:hex_number Constant
	*		optor		noeat
	"0-9"		hex_number
	"a-fA-F"	hex_number

:number Constant
	*		optor		noeat
	"0-9"		number

# Keywords

:ident Idle
	*		optor		noeat
	"a-zA-Z0-9@ "	ident

:kw Keyword
	*	idle	noeat

